{
  "openapi": "3.1.0",
  "info": { "title": "FastAPI", "version": "0.1.0" },
  "servers": [
    {
      "url": "https://api.trychannel3.com",
      "description": "Production environment"
    }
  ],
  "paths": {
    "/v0/search": {
      "post": {
        "tags": ["channel3-api"],
        "summary": "Search",
        "description": "Search for products.",
        "operationId": "search_v0_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SearchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/Product" },
                  "type": "array",
                  "title": "Response Search V0 Search Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "examples": {
                  "missing_key": {
                    "summary": "Missing API Key",
                    "value": {
                      "detail": "Unauthorized. Missing authentication key. Make sure to attach an x-api-key with your request. Need help? Reach out to founders@trychannel3.com."
                    }
                  },
                  "invalid_key": {
                    "summary": "Invalid API Key",
                    "value": {
                      "detail": "API key was provided but is invalid. Need help? Reach out to founders@trychannel3.com."
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "example": {
                  "detail": "You have used all of your free credits. Add a payment method to continue."
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "example": {
                  "detail": [
                    {
                      "loc": ["body", "query"],
                      "msg": "field required",
                      "type": "value_error.missing"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "example": { "detail": "Internal Server Error" }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "example": {
                  "detail": "Could not fetch image from image_url. Please ensure the url is valid and publicly accessible."
                }
              }
            }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v0/products/{product_id}": {
      "get": {
        "tags": ["channel3-api"],
        "summary": "Get Product Detail",
        "description": "Get detailed information about a specific product by its ID.",
        "operationId": "get_product_detail_v0_products__product_id__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Product Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductDetail" }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "examples": {
                  "missing_key": {
                    "summary": "Missing API Key",
                    "value": {
                      "detail": "Unauthorized. Missing authentication key. Make sure to attach an x-api-key with your request. Need help? Reach out to founders@trychannel3.com."
                    }
                  },
                  "invalid_key": {
                    "summary": "Invalid API Key",
                    "value": {
                      "detail": "API key was provided but is invalid. Need help? Reach out to founders@trychannel3.com."
                    }
                  }
                },
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "example": {
                  "detail": "You have used all of your free credits. Add a payment method to continue."
                },
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "detail": [
                    {
                      "loc": ["body", "query"],
                      "msg": "field required",
                      "type": "value_error.missing"
                    }
                  ]
                },
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": { "detail": "Internal Server Error" },
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "example": { "detail": "Product with ID 'xyz123' not found" },
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/v0/brands": {
      "get": {
        "tags": ["channel3-api"],
        "summary": "Get Brands",
        "description": "Get all brands that the vendor currently sells.",
        "operationId": "get_brands_v0_brands_get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Query"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 1, "title": "Page" }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Size" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse_Brand_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "examples": {
                  "missing_key": {
                    "summary": "Missing API Key",
                    "value": {
                      "detail": "Unauthorized. Missing authentication key. Make sure to attach an x-api-key with your request. Need help? Reach out to founders@trychannel3.com."
                    }
                  },
                  "invalid_key": {
                    "summary": "Invalid API Key",
                    "value": {
                      "detail": "API key was provided but is invalid. Need help? Reach out to founders@trychannel3.com."
                    }
                  }
                },
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "example": {
                  "detail": "You have used all of your free credits. Add a payment method to continue."
                },
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "detail": [
                    {
                      "loc": ["body", "query"],
                      "msg": "field required",
                      "type": "value_error.missing"
                    }
                  ]
                },
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": { "detail": "Internal Server Error" },
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/v0/brands/{brand_id}": {
      "get": {
        "tags": ["channel3-api"],
        "summary": "Get Brand Detail",
        "description": "Get detailed information for a specific brand by its ID.",
        "operationId": "get_brand_detail_v0_brands__brand_id__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "brand_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Brand Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Brand" }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "examples": {
                  "missing_key": {
                    "summary": "Missing API Key",
                    "value": {
                      "detail": "Unauthorized. Missing authentication key. Make sure to attach an x-api-key with your request. Need help? Reach out to founders@trychannel3.com."
                    }
                  },
                  "invalid_key": {
                    "summary": "Invalid API Key",
                    "value": {
                      "detail": "API key was provided but is invalid. Need help? Reach out to founders@trychannel3.com."
                    }
                  }
                },
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "example": {
                  "detail": "You have used all of your free credits. Add a payment method to continue."
                },
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "detail": [
                    {
                      "loc": ["body", "query"],
                      "msg": "field required",
                      "type": "value_error.missing"
                    }
                  ]
                },
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": { "detail": "Internal Server Error" },
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "404": {
            "description": "Brand not found",
            "content": {
              "application/json": {
                "example": { "detail": "Brand with ID 'xyz123' not found" },
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/v0/enrich": {
      "post": {
        "tags": ["channel3-api"],
        "summary": "Enrich Product Url",
        "description": "Enrich a product URL with additional information.",
        "operationId": "enrich_product_url_v0_enrich_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EnrichRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EnrichedProduct" }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "examples": {
                  "missing_key": {
                    "summary": "Missing API Key",
                    "value": {
                      "detail": "Unauthorized. Missing authentication key. Make sure to attach an x-api-key with your request. Need help? Reach out to founders@trychannel3.com."
                    }
                  },
                  "invalid_key": {
                    "summary": "Invalid API Key",
                    "value": {
                      "detail": "API key was provided but is invalid. Need help? Reach out to founders@trychannel3.com."
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "example": {
                  "detail": "You have used all of your free credits. Add a payment method to continue."
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "example": {
                  "detail": [
                    {
                      "loc": ["body", "query"],
                      "msg": "field required",
                      "type": "value_error.missing"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "example": { "detail": "Internal Server Error" }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "example": {
                  "detail": "Product with URL 'abc.com/product-123' not found"
                }
              }
            }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AvailabilityStatus": {
        "type": "string",
        "enum": [
          "InStock",
          "LimitedAvailability",
          "PreOrder",
          "BackOrder",
          "SoldOut",
          "OutOfStock",
          "Discontinued",
          "Unknown"
        ],
        "title": "AvailabilityStatus"
      },
      "Brand": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "name": { "type": "string", "title": "Name" },
          "logo_url": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Logo Url"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["id", "name"],
        "title": "Brand"
      },
      "EnrichRequest": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "The URL of the product to enrich"
          }
        },
        "type": "object",
        "required": ["url"],
        "title": "EnrichRequest"
      },
      "EnrichedProduct": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "title": { "type": "string", "title": "Title" },
          "url": { "type": "string", "title": "Url" },
          "brand_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Brand Id"
          },
          "brand_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Brand Name"
          },
          "image_urls": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Image Urls"
          },
          "price": { "$ref": "#/components/schemas/Price" },
          "availability": { "$ref": "#/components/schemas/AvailabilityStatus" },
          "gender": {
            "anyOf": [
              { "type": "string", "enum": ["male", "female", "unisex"] },
              { "type": "null" }
            ],
            "title": "Gender"
          },
          "materials": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Materials"
          },
          "key_features": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Key Features"
          },
          "variants": {
            "items": { "$ref": "#/components/schemas/Variant" },
            "type": "array",
            "title": "Variants",
            "default": []
          }
        },
        "type": "object",
        "required": ["id", "title", "url", "price", "availability"],
        "title": "EnrichedProduct"
      },
      "ErrorResponse": {
        "properties": { "detail": { "title": "Detail" } },
        "type": "object",
        "required": ["detail"],
        "title": "ErrorResponse"
      },
      "PaginatedResponse_Brand_": {
        "properties": {
          "items": {
            "items": { "$ref": "#/components/schemas/Brand" },
            "type": "array",
            "title": "Items"
          },
          "pagination": { "$ref": "#/components/schemas/PaginationMeta" }
        },
        "type": "object",
        "required": ["items", "pagination"],
        "title": "PaginatedResponse[Brand]"
      },
      "PaginationMeta": {
        "properties": {
          "current_page": { "type": "integer", "title": "Current Page" },
          "page_size": { "type": "integer", "title": "Page Size" },
          "total_count": { "type": "integer", "title": "Total Count" },
          "total_pages": { "type": "integer", "title": "Total Pages" }
        },
        "type": "object",
        "required": ["current_page", "page_size", "total_count", "total_pages"],
        "title": "PaginationMeta",
        "description": "Pagination metadata for responses"
      },
      "Price": {
        "properties": {
          "price": {
            "type": "number",
            "title": "Price",
            "description": "The current price of the product, including any discounts."
          },
          "compare_at_price": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Compare At Price",
            "description": "The original price of the product before any discounts."
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "The currency code of the product, like USD, EUR, GBP, etc."
          }
        },
        "type": "object",
        "required": ["price", "currency"],
        "title": "Price"
      },
      "Product": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "score": { "type": "integer", "title": "Score" },
          "url": { "type": "string", "title": "Url" },
          "title": { "type": "string", "title": "Title" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "brand_name": { "type": "string", "title": "Brand Name" },
          "image_url": { "type": "string", "title": "Image Url" },
          "price": { "$ref": "#/components/schemas/Price" },
          "availability": { "$ref": "#/components/schemas/AvailabilityStatus" },
          "variants": {
            "items": { "$ref": "#/components/schemas/Variant" },
            "type": "array",
            "title": "Variants",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "score",
          "url",
          "title",
          "brand_name",
          "image_url",
          "price",
          "availability"
        ],
        "title": "Product",
        "description": "A product"
      },
      "ProductDetail": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "url": { "type": "string", "title": "Url" },
          "title": { "type": "string", "title": "Title" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "brand_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Brand Id"
          },
          "brand_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Brand Name"
          },
          "image_urls": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Image Urls"
          },
          "price": { "$ref": "#/components/schemas/Price" },
          "availability": { "$ref": "#/components/schemas/AvailabilityStatus" },
          "gender": {
            "anyOf": [
              { "type": "string", "enum": ["male", "female", "unisex"] },
              { "type": "null" }
            ],
            "title": "Gender"
          },
          "materials": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Materials"
          },
          "key_features": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Key Features"
          },
          "variants": {
            "items": { "$ref": "#/components/schemas/Variant" },
            "type": "array",
            "title": "Variants",
            "default": []
          }
        },
        "type": "object",
        "required": ["id", "url", "title", "price", "availability"],
        "title": "ProductDetail",
        "description": "A product with detailed information"
      },
      "RedirectMode": {
        "type": "string",
        "enum": ["brand", "price", "commission"],
        "title": "RedirectMode",
        "description": "\"price\" redirects to the product page with the lowest price\n\"commission\" redirects to the product page with the highest commission rate\n\"brand\" redirects to the brand's product page"
      },
      "SearchConfig": {
        "properties": {
          "enrich_query": {
            "type": "boolean",
            "title": "Enrich Query",
            "default": true
          },
          "semantic_search": {
            "type": "boolean",
            "title": "Semantic Search",
            "default": true
          },
          "redirect_mode": {
            "anyOf": [
              { "$ref": "#/components/schemas/RedirectMode" },
              { "type": "null" }
            ],
            "description": "Optional redirect mode. \"brand\" redirects to the brand's product page, \"price\" redirects to the lowest priced product, \"commission\" redirects to the product page with the highest commission rate"
          }
        },
        "type": "object",
        "title": "SearchConfig",
        "description": "Configuration for a search request"
      },
      "SearchFilterPrice": {
        "properties": {
          "min_price": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Min Price",
            "description": "Minimum price, in dollars and cents"
          },
          "max_price": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Max Price",
            "description": "Maximum price, in dollars and cents"
          }
        },
        "type": "object",
        "title": "SearchFilterPrice",
        "description": "Price filter. Values are inclusive."
      },
      "SearchFilters": {
        "properties": {
          "brand_ids": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Brand Ids",
            "description": "List of brand IDs"
          },
          "gender": {
            "anyOf": [
              { "type": "string", "enum": ["male", "female", "unisex"] },
              { "type": "null" }
            ],
            "title": "Gender"
          },
          "price": {
            "anyOf": [
              { "$ref": "#/components/schemas/SearchFilterPrice" },
              { "type": "null" }
            ],
            "description": "Price filter. Values are inclusive."
          },
          "availability": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/AvailabilityStatus" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Availability",
            "description": "List of availability statuses"
          },
          "exclude_product_ids": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Exclude Product Ids",
            "description": "List of product IDs to exclude"
          }
        },
        "type": "object",
        "title": "SearchFilters"
      },
      "SearchRequest": {
        "properties": {
          "query": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Query",
            "description": "Search query"
          },
          "image_url": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Image Url",
            "description": "Image URL"
          },
          "base64_image": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Base64 Image",
            "description": "Base64 encoded image"
          },
          "limit": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Limit",
            "description": "Optional limit on the number of results",
            "default": 20
          },
          "filters": {
            "$ref": "#/components/schemas/SearchFilters",
            "description": "Optional filters",
            "default": {}
          },
          "config": {
            "$ref": "#/components/schemas/SearchConfig",
            "description": "Optional configuration",
            "default": { "enrich_query": true, "semantic_search": true }
          },
          "context": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Context",
            "description": "Optional customer information to personalize search results"
          }
        },
        "type": "object",
        "title": "SearchRequest"
      },
      "Variant": {
        "properties": {
          "product_id": { "type": "string", "title": "Product Id" },
          "title": { "type": "string", "title": "Title" },
          "image_url": { "type": "string", "title": "Image Url" }
        },
        "type": "object",
        "required": ["product_id", "title", "image_url"],
        "title": "Variant"
      }
    },
    "securitySchemes": {
      "APIKeyHeader": { "type": "apiKey", "in": "header", "name": "x-api-key" }
    }
  }
}
